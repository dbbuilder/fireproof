name: Deploy Frontend to Production

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/fire-extinguisher-web/**'
      - '.github/workflows/deploy-frontend-production.yml'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  WORKING_DIRECTORY: './frontend/fire-extinguisher-web'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

    - name: Install dependencies
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm ci

    - name: Run linter
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: npm run lint

    - name: Run E2E tests (against staging)
      working-directory: ${{ env.WORKING_DIRECTORY }}
      env:
        VITE_API_BASE_URL: ${{ secrets.STAGING_API_BASE_URL }}
      run: npm run test:e2e

    - name: Build application
      working-directory: ${{ env.WORKING_DIRECTORY }}
      env:
        VITE_API_BASE_URL: ${{ secrets.PRODUCTION_API_BASE_URL }}
        VITE_AZURE_AD_B2C_AUTHORITY: ${{ secrets.PRODUCTION_AZURE_AD_B2C_AUTHORITY }}
        VITE_AZURE_AD_B2C_CLIENT_ID: ${{ secrets.PRODUCTION_AZURE_AD_B2C_CLIENT_ID }}
        VITE_AZURE_AD_B2C_REDIRECT_URI: ${{ secrets.PRODUCTION_FRONTEND_URL }}
      run: npm run build

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PRODUCTION }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: 'upload'
        app_location: ${{ env.WORKING_DIRECTORY }}
        output_location: 'dist'
        skip_app_build: true

    - name: Health check
      run: |
        echo "Waiting 30 seconds for deployment to stabilize..."
        sleep 30
        response=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.PRODUCTION_FRONTEND_URL }} || echo "000")
        if [ "$response" = "200" ]; then
          echo "Health check passed (HTTP $response)"
        else
          echo "Health check failed (HTTP $response)"
          exit 1
        fi

    - name: Notify deployment success
      if: success()
      run: |
        echo "✅ Frontend production deployment successful!"
        echo "URL: ${{ secrets.PRODUCTION_FRONTEND_URL }}"

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "❌ Frontend production deployment failed!"
