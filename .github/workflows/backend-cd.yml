name: Backend CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_WEBAPP_NAME: 'fireproof-api'
  AZURE_WEBAPP_PACKAGE_PATH: './backend/FireExtinguisherInspection.API'

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://fireproof-api-staging.azurewebsites.net
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
    - name: Publish
      run: dotnet publish --configuration Release --output ./publish
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
    - name: Deploy to Azure Web App (Staging Slot)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish
        slot-name: staging
        
    - name: Health check (Staging)
      run: |
        sleep 30
        response=$(curl --write-out '%{http_code}' --silent --output /dev/null https://fireproof-api-staging.azurewebsites.net/health)
        if [ $response -ne 200 ]; then
          echo "Health check failed with status $response"
          exit 1
        fi
        echo "Health check passed"
        
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: https://fireproof-api.azurewebsites.net
      
    steps:
    - name: Swap staging to production
      uses: azure/cli@v1
      with:
        inlineScript: |
          az webapp deployment slot swap \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --slot staging \
            --target-slot production
            
    - name: Health check (Production)
      run: |
        sleep 30
        response=$(curl --write-out '%{http_code}' --silent --output /dev/null https://fireproof-api.azurewebsites.net/health)
        if [ $response -ne 200 ]; then
          echo "Health check failed with status $response"
          echo "Rolling back..."
          az webapp deployment slot swap \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --slot production \
            --target-slot staging
          exit 1
        fi
        echo "Health check passed"
