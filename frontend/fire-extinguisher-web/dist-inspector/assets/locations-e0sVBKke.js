import{j as h}from"./vendor-8rVgzruD.js";import{b as i}from"./index-DcSKaWik.js";const s={async getAll(t=null){const o=t!==null?{isActive:t}:{};return(await i.get("/locations",{params:o})).data},async getById(t){return(await i.get(`/locations/${t}`)).data},async create(t){return(await i.post("/locations",t)).data},async update(t,o){return(await i.put(`/locations/${t}`,o)).data},async delete(t){await i.delete(`/locations/${t}`)}},g=h("locations",{state:()=>({locations:[],currentLocation:null,loading:!1,error:null}),getters:{activeLocations:t=>t.locations.filter(o=>o.isActive),locationCount:t=>t.locations.length,getLocationById:t=>o=>t.locations.find(e=>e.locationId===o)},actions:{async fetchLocations(t=null){var o,e;this.loading=!0,this.error=null;try{this.locations=await s.getAll(t)}catch(r){throw this.error=((e=(o=r.response)==null?void 0:o.data)==null?void 0:e.message)||"Failed to fetch locations",console.error("Error fetching locations:",r),r}finally{this.loading=!1}},async fetchLocationById(t){var o,e;this.loading=!0,this.error=null;try{return this.currentLocation=await s.getById(t),this.currentLocation}catch(r){throw this.error=((e=(o=r.response)==null?void 0:o.data)==null?void 0:e.message)||"Failed to fetch location",console.error("Error fetching location:",r),r}finally{this.loading=!1}},async createLocation(t){var o,e;this.loading=!0,this.error=null;try{const r=await s.create(t);return this.locations.push(r),r}catch(r){throw this.error=((e=(o=r.response)==null?void 0:o.data)==null?void 0:e.message)||"Failed to create location",console.error("Error creating location:",r),r}finally{this.loading=!1}},async updateLocation(t,o){var e,r,a;this.loading=!0,this.error=null;try{const n=await s.update(t,o),l=this.locations.findIndex(c=>c.locationId===t);return l!==-1&&(this.locations[l]=n),((e=this.currentLocation)==null?void 0:e.locationId)===t&&(this.currentLocation=n),n}catch(n){throw this.error=((a=(r=n.response)==null?void 0:r.data)==null?void 0:a.message)||"Failed to update location",console.error("Error updating location:",n),n}finally{this.loading=!1}},async deleteLocation(t){var o,e,r;this.loading=!0,this.error=null;try{await s.delete(t),this.locations=this.locations.filter(a=>a.locationId!==t),((o=this.currentLocation)==null?void 0:o.locationId)===t&&(this.currentLocation=null)}catch(a){throw this.error=((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to delete location",console.error("Error deleting location:",a),a}finally{this.loading=!1}},clearError(){this.error=null}}});export{g as u};
