import{j as g}from"./vendor-8rVgzruD.js";import{b as o}from"./index-DcSKaWik.js";const h={async getAll(e){const r=e||{};return(await o.get("/extinguishers",{params:r})).data},async getById(e){return(await o.get(`/extinguishers/${e}`)).data},async getByBarcode(e){return(await o.get(`/extinguishers/barcode/${encodeURIComponent(e)}`)).data},async create(e){return(await o.post("/extinguishers",e)).data},async update(e,r){return(await o.put(`/extinguishers/${e}`,r)).data},async delete(e){await o.delete(`/extinguishers/${e}`)},async generateBarcode(e){return(await o.post(`/extinguishers/${e}/barcode`)).data},async markOutOfService(e,r){return(await o.post(`/extinguishers/${e}/outofservice`,{reason:r})).data},async returnToService(e){return(await o.post(`/extinguishers/${e}/returntoservice`)).data},async getNeedingService(e=30){return(await o.get("/extinguishers/needingservice",{params:{daysAhead:e}})).data},async getNeedingHydroTest(e=30){return(await o.get("/extinguishers/needinghydrotest",{params:{daysAhead:e}})).data}},l=g("extinguishers",{state:()=>({extinguishers:[],currentExtinguisher:null,loading:!1,error:null}),getters:{activeExtinguishers:e=>e.extinguishers.filter(r=>r.isActive&&!r.isOutOfService),outOfServiceExtinguishers:e=>e.extinguishers.filter(r=>r.isOutOfService),extinguisherCount:e=>e.extinguishers.length,getExtinguisherById:e=>r=>e.extinguishers.find(s=>s.extinguisherId===r),extinguishersByLocation:e=>{const r={};return e.extinguishers.forEach(s=>{const t=s.locationName||"Unknown";r[t]||(r[t]=[]),r[t].push(s)}),r},extinguishersByType:e=>{const r={};return e.extinguishers.forEach(s=>{const t=s.typeName||"Unknown";r[t]||(r[t]=[]),r[t].push(s)}),r},needingAttention:e=>{const r=new Date,s=new Date;return s.setDate(r.getDate()+30),e.extinguishers.filter(t=>{if(!t.isActive||t.isOutOfService)return!1;const i=t.nextServiceDueDate?new Date(t.nextServiceDueDate):null,n=t.nextHydroTestDueDate?new Date(t.nextHydroTestDueDate):null,a=i&&i<=s,u=n&&n<=s;return a||u})}},actions:{async fetchExtinguishers(e){var r,s;this.loading=!0,this.error=null;try{this.extinguishers=await h.getAll(e)}catch(t){throw this.error=((s=(r=t.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to fetch extinguishers",console.error("Error fetching extinguishers:",t),t}finally{this.loading=!1}},async fetchExtinguisherById(e){var r,s;this.loading=!0,this.error=null;try{return this.currentExtinguisher=await h.getById(e),this.currentExtinguisher}catch(t){throw this.error=((s=(r=t.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to fetch extinguisher",console.error("Error fetching extinguisher:",t),t}finally{this.loading=!1}},async fetchExtinguisherByBarcode(e){var r,s;this.loading=!0,this.error=null;try{return this.currentExtinguisher=await h.getByBarcode(e),this.currentExtinguisher}catch(t){throw this.error=((s=(r=t.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to fetch extinguisher by barcode",console.error("Error fetching extinguisher by barcode:",t),t}finally{this.loading=!1}},async createExtinguisher(e){var r,s;this.loading=!0,this.error=null;try{const t=await h.create(e);return this.extinguishers.push(t),t}catch(t){throw this.error=((s=(r=t.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to create extinguisher",console.error("Error creating extinguisher:",t),t}finally{this.loading=!1}},async updateExtinguisher(e,r){var s,t,i;this.loading=!0,this.error=null;try{const n=await h.update(e,r),a=this.extinguishers.findIndex(u=>u.extinguisherId===e);return a!==-1&&(this.extinguishers[a]=n),((s=this.currentExtinguisher)==null?void 0:s.extinguisherId)===e&&(this.currentExtinguisher=n),n}catch(n){throw this.error=((i=(t=n.response)==null?void 0:t.data)==null?void 0:i.message)||"Failed to update extinguisher",console.error("Error updating extinguisher:",n),n}finally{this.loading=!1}},async deleteExtinguisher(e){var r,s,t;this.loading=!0,this.error=null;try{await h.delete(e),this.extinguishers=this.extinguishers.filter(i=>i.extinguisherId!==e),((r=this.currentExtinguisher)==null?void 0:r.extinguisherId)===e&&(this.currentExtinguisher=null)}catch(i){throw this.error=((t=(s=i.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to delete extinguisher",console.error("Error deleting extinguisher:",i),i}finally{this.loading=!1}},async generateBarcode(e){var r,s,t;this.loading=!0,this.error=null;try{const i=await h.generateBarcode(e),n=this.extinguishers.findIndex(a=>a.extinguisherId===e);return n!==-1&&(this.extinguishers[n]={...this.extinguishers[n],barcodeData:i.barcodeData,qrCodeData:i.qrCodeData}),((r=this.currentExtinguisher)==null?void 0:r.extinguisherId)===e&&(this.currentExtinguisher={...this.currentExtinguisher,barcodeData:i.barcodeData,qrCodeData:i.qrCodeData}),i}catch(i){throw this.error=((t=(s=i.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to generate barcode",console.error("Error generating barcode:",i),i}finally{this.loading=!1}},async markOutOfService(e,r){var s,t,i;this.loading=!0,this.error=null;try{const n=await h.markOutOfService(e,r),a=this.extinguishers.findIndex(u=>u.extinguisherId===e);return a!==-1&&(this.extinguishers[a]=n),((s=this.currentExtinguisher)==null?void 0:s.extinguisherId)===e&&(this.currentExtinguisher=n),n}catch(n){throw this.error=((i=(t=n.response)==null?void 0:t.data)==null?void 0:i.message)||"Failed to mark extinguisher out of service",console.error("Error marking extinguisher out of service:",n),n}finally{this.loading=!1}},async returnToService(e){var r,s,t;this.loading=!0,this.error=null;try{const i=await h.returnToService(e),n=this.extinguishers.findIndex(a=>a.extinguisherId===e);return n!==-1&&(this.extinguishers[n]=i),((r=this.currentExtinguisher)==null?void 0:r.extinguisherId)===e&&(this.currentExtinguisher=i),i}catch(i){throw this.error=((t=(s=i.response)==null?void 0:s.data)==null?void 0:t.message)||"Failed to return extinguisher to service",console.error("Error returning extinguisher to service:",i),i}finally{this.loading=!1}},async fetchNeedingService(e=30){var r,s;this.loading=!0,this.error=null;try{return await h.getNeedingService(e)}catch(t){throw this.error=((s=(r=t.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to fetch extinguishers needing service",console.error("Error fetching extinguishers needing service:",t),t}finally{this.loading=!1}},async fetchNeedingHydroTest(e=30){var r,s;this.loading=!0,this.error=null;try{return await h.getNeedingHydroTest(e)}catch(t){throw this.error=((s=(r=t.response)==null?void 0:r.data)==null?void 0:s.message)||"Failed to fetch extinguishers needing hydro test",console.error("Error fetching extinguishers needing hydro test:",t),t}finally{this.loading=!1}},clearError(){this.error=null}}});export{l as u};
